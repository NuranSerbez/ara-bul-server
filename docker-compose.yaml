version: '3.8'

services:
  remix-app:
    build:
      context: ./remix-app
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./remix-app:/app
      - /app/node_modules
      - /app/build
    environment:
      - NODE_ENV=development
      - PORT=3000
      - BACKEND_URL=http://server:4000
    depends_on:
      - server
    restart: unless-stopped
    command: npm run dev

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - '4000:4000'
    volumes:
      - ./server:/app
    environment:
      DATABASE_URL: postgresql://postgres:aaaERTYUHGF123@db:5432/arabul_db
      PYTHONUNBUFFERED: 1
      FLASK_ENV: development
      FLASK_DEBUG: 1
      POSTGRES_PASSWORD: aaaERTYUHGF123
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: aaaERTYUHGF123
      POSTGRES_DB: arabul_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
